cmake_minimum_required (VERSION 3.5) 

project (QtReleaseProxy)

set (QT ../../../External/Qt/)

macro(make_absolute files)
	set (_out)
	foreach(file ${${files}})
		get_filename_component(file_abs ${file} ABSOLUTE)	
		LIST(APPEND _out ${file_abs})
	endforeach()
	set (${files} ${_out})
endmacro()

macro(make_definitions definitions)
	set (_out)
	foreach(definition ${${definitions}})
		LIST(APPEND _out -D${definition})
	endforeach()
	set (${definitions} ${_out})
endmacro()

# Add a logical target that can be used to link the specified libraries into an
# executable target.
macro(ADD_LOGICAL_TARGET target debug_lib release_lib)
  add_library(${target} STATIC IMPORTED)
  set_target_properties(${target} PROPERTIES
    IMPORTED_LOCATION "${release_lib}"
    IMPORTED_LOCATION_DEBUG "${debug_lib}"
    IMPORTED_LOCATION_RELEASE "${release_lib}"
    )
endmacro()

make_absolute(QT)
set (QT ${QT}/)

set (LIB_OUTPUT lib)
make_absolute(LIB_OUTPUT)

set (PUB ../../../Bin/Windows)
make_absolute(PUB)

set (QT_INCLUDES 
	${QT}include
	${QT}include/QtWidgets
	${QT}include/QtPrintSupport
	${QT}include/QtCore
	${QT}include/QtGui
	)
make_absolute(QT_INCLUDES)

macro(ADD_LOGICAL_QT_TARGET name)
	ADD_LOGICAL_TARGET("${name}" ${QT}lib/${name}d.lib ${QT}lib/${name}.lib)
endmacro()

ADD_LOGICAL_QT_TARGET(Qt5Core)
#ADD_LOGICAL_QT_TARGET(Qt5Gui)
#ADD_LOGICAL_QT_TARGET(Qt5Widgets)
#ADD_LOGICAL_QT_TARGET(Qt5PrintSupport)

set (QT_LIBS 
	Qt5Core
	#Qt5Gui
	#Qt5Widgets
	#Qt5PrintSupport
)

set (PROJ QtReleaseProxy)

set (INCLUDES
	${QT_INCLUDES}
)

set (SRC
	include/QtReleaseProxy.h
	src/QtReleaseProxy.cpp
)

set (DEFINITIONS
	_CRT_SECURE_NO_WARNINGS
	QTRELEASEPROXY_LIB
)
make_definitions(DEFINITIONS)

set (LIBS
	${QT_LIBS}
)

foreach( OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES} )
    string( TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG )
    set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${PUB} )
endforeach( OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES )

add_library (${PROJ} SHARED ${SRC})
set_target_properties(${PROJ} PROPERTIES INCLUDE_DIRECTORIES "${INCLUDES}")

set_target_properties( ${PROJ} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${LIB_OUTPUT} )
set_target_properties( ${PROJ} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${LIB_OUTPUT} )
   

target_compile_definitions(${PROJ} PUBLIC ${DEFINITIONS})

set_target_properties( ${PROJ} PROPERTIES DEBUG_POSTFIX "d" )
set_target_properties( ${PROJ} PROPERTIES RELEASE_POSTFIX "" )
set_target_properties( ${PROJ} PROPERTIES MINSIZEREL_POSTFIX "s" )
set_target_properties( ${PROJ} PROPERTIES RELWITHDEBINFO_POSTFIX "r" )

target_link_libraries(${PROJ} ${LIBS})


